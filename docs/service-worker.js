const e=["/_app/start-753f31ff.js","/_app/assets/start-a97448ed.css","/_app/pages/__layout.svelte-b8f3e60e.js","/_app/assets/global-b865108a.css","/_app/error.svelte-b5ef5331.js","/_app/pages/index.svelte-415e4632.js","/_app/assets/pages/index.svelte-1bf55ea0.css","/_app/pages/devlog/__layout.reset.svelte-426f96a2.js","/_app/pages/devlog/index.svelte-43811001.js","/_app/pages/devlog/first-alpha.md-dffc36a2.js","/_app/assets/pages/devlog/first-alpha.md-f83462a4.css","/_app/chunks/vendor-0274e95f.js","/_app/chunks/paths-45dac81d.js","/_app/chunks/url-92f7f1d2.js"].concat(["/devlog/first-alpha/","/devlog/","/"]),s="cache-name1621885130330";let t=!0;function a(...e){t&&console.debug(...e)}self.addEventListener("message",(function(e){e.data&&"debug"===e.data.type&&(t=e.data.enabled&&e.data.level>=5)}));const r=self.location.pathname,n=r.substr(0,r.length-18),c=e.map((e=>n+e)),l=[];l.push("localhost");const o=[self.location.origin,"https://rsms.me/inter/","cdn",".*\\.png$",".*\\.svg$"];a(`[Service Worker] Origin: ${self.location.origin}`),self.addEventListener("install",(e=>{a("[Service Worker] Install"),e.waitUntil(caches.open(s).then((e=>(a(`[Service Worker] Creating cache: ${s}`),e.addAll(c)))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{a("[Service Worker] Activate"),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==s)return a(`[Service Worker] Deleting: ${e}`),caches.delete(e)}))).then((()=>self.clients.claim())))))}));const i=(e,t)=>fetch(e).then((t=>caches.open(s).then((s=>("GET"===e.method&&e.url.startsWith("http")&&s.put(e,t.clone()),t))))).catch((()=>t)),p={method:(e,s)=>{a(`[Service Worker] Cache first: ${e.url}`);const t=i(e,s);return s||t},regexes:o},d={method:(e,s)=>(a(`[Service Worker] Cache only: ${e.url}`),s||i(e,s)),regexes:[]},h={method:(e,s)=>(a(`[Service Worker] Online first: ${e.url}`),i(e,s)),regexes:l},f={method:e=>(a(`[Service Worker] Online only: ${e.url}`),fetch(e)),regexes:[]};self.addEventListener("fetch",(e=>{const s=e.request;e.respondWith(caches.match(s).then((e=>{const t=[h,f,p,d];for(const a of t)for(const t of a.regexes)if(RegExp(t).test(s.url))return a.method(s,e);return h.method(s,e)})))}));
